// <auto-generated />
using System;
using FinanceTracker.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinanceTracker.Migrations
{
    [DbContext(typeof(FinanceTrackerContext))]
    [Migration("20250325133801_0001InitialCreate")]
    partial class _0001InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FinanceTracker.Models.Account", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Email", "UserId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("FinanceTracker.Models.HolidayPay", b =>
                {
                    b.Property<DateOnly>("ExperationDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FirstHoliday")
                        .HasColumnType("date");

                    b.Property<decimal>("HolidayPayAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ExperationDate");

                    b.ToTable("HolidayPays");
                });

            modelBuilder.Entity("FinanceTracker.Models.Job", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("CVR")
                        .HasColumnType("int");

                    b.Property<string>("EmploymentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("HourlyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TaxCard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "CVR");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("FinanceTracker.Models.Paycheck", b =>
                {
                    b.Property<DateOnly>("SalaryPeriod")
                        .HasColumnType("date");

                    b.Property<decimal>("AMContribution")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HolidaySupplement")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Holidaycompensation")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Pension")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SalarayBeforeTax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Tax")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("WorkedHours")
                        .HasColumnType("time");

                    b.Property<decimal>("taxDeduction")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("SalaryPeriod");

                    b.ToTable("Paychecks");
                });

            modelBuilder.Entity("FinanceTracker.Models.SuPayment", b =>
                {
                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<decimal>("SuAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TaxCard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Date");

                    b.ToTable("SuPayments");
                });

            modelBuilder.Entity("FinanceTracker.Models.SupplementDetails", b =>
                {
                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<int>("CVR")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("JobCVR")
                        .HasColumnType("int");

                    b.Property<int>("JobUserId")
                        .HasColumnType("int");

                    b.Property<int>("Weekday")
                        .HasColumnType("int");

                    b.HasKey("StartTime", "EndTime", "CVR");

                    b.HasIndex("JobUserId", "JobCVR");

                    b.ToTable("supplementPays");
                });

            modelBuilder.Entity("FinanceTracker.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FinanceTracker.Models.WorkShift", b =>
                {
                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("PaycheckSalaryPeriod")
                        .HasColumnType("date");

                    b.HasKey("StartTime", "EndTime", "UserId");

                    b.HasIndex("PaycheckSalaryPeriod");

                    b.HasIndex("UserId");

                    b.ToTable("WorkShifts");
                });

            modelBuilder.Entity("FinanceTracker.Models.Account", b =>
                {
                    b.HasOne("FinanceTracker.Models.User", "User")
                        .WithOne("Account")
                        .HasForeignKey("FinanceTracker.Models.Account", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinanceTracker.Models.Job", b =>
                {
                    b.HasOne("FinanceTracker.Models.User", "User")
                        .WithMany("Job")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinanceTracker.Models.SupplementDetails", b =>
                {
                    b.HasOne("FinanceTracker.Models.Job", "Job")
                        .WithMany("SupplementDetails")
                        .HasForeignKey("JobUserId", "JobCVR")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");
                });

            modelBuilder.Entity("FinanceTracker.Models.WorkShift", b =>
                {
                    b.HasOne("FinanceTracker.Models.Paycheck", "Paycheck")
                        .WithMany("WorkShift")
                        .HasForeignKey("PaycheckSalaryPeriod")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanceTracker.Models.User", "User")
                        .WithMany("WorkShift")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paycheck");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinanceTracker.Models.Job", b =>
                {
                    b.Navigation("SupplementDetails");
                });

            modelBuilder.Entity("FinanceTracker.Models.Paycheck", b =>
                {
                    b.Navigation("WorkShift");
                });

            modelBuilder.Entity("FinanceTracker.Models.User", b =>
                {
                    b.Navigation("Account")
                        .IsRequired();

                    b.Navigation("Job");

                    b.Navigation("WorkShift");
                });
#pragma warning restore 612, 618
        }
    }
}
